{"version":3,"sources":["features/i18n/LanguageSelector.tsx","components/Footer/index.tsx","components/Header/index.tsx","app/App.tsx","app/rootReducer.ts","app/store.ts","index.tsx","utils/log.ts","utils/helpers.ts","features/pagination/pageSlice.ts","api/githubAPI.ts","utils/i18n.ts","utils/consts.ts","features/i18n/i18nSlice.ts","features/search/searchSlice.ts","components/Loading/index.tsx","features/reposList/reposSlice.ts","features/repoDetails/repoDetailsSlice.ts"],"names":["LanguageSelector","t","useTranslation","dispatch","useDispatch","currentLanguage","useSelector","state","i18n","currentLocale","changeLanguage","e","a","value","target","setHtmlTagLangAttribute","setCurrentLocale","className","htmlFor","onChange","id","Object","entries","LANGUAGES","map","languageCode","name","emojiFlag","key","Footer","memo","href","PROJECT_REPO_LINK","rel","Date","getFullYear","Header","forwardRef","props","ref","to","ROUTES","MAIN","width","height","process","MainPage","lazy","NotFoundPage","RepoDetails","App","useRef","fallback","Loading","path","exact","REPO_CARD","NOT_FOUND","component","rootReducer","combineReducers","repos","pages","search","repoDetails","store","configureStore","reducer","document","body","classList","add","require","default","ReactDOM","render","getElementById","LEVELS","METHODS","print","level","method","args","length","now","formatted","toISOString","console","log","debug","DEBUG","warn","WARN","error","ERROR","generatePagesNumeration","current","total","PAGINATION_BUTTONS_COUNT","MAX_SEARCH_PAGE","left","Math","max","min","floor","items","Array","from","item","idx","splice","formatDate","dateTime","language","navigator","options","DEFAULT_DATE_FORMAT_OPTIONS","toLocaleString","saveInSessionStorage","sessionStorage","localStorage","clear","window","documentElement","lang","initialState","totalPages","currentPage","parseInt","pageSlice","createSlice","reducers","setCurrentPage","action","payload","toString","setTotalPages","total_count","ceil","REPOS_PER_PAGE","actions","sleep","ms","Promise","res","setTimeout","requestWithRetry","fn","retries","backoff","catch","err","status","response","__GITHUB_RATE_LIMITED__","message","fetchRepos","q","page","config","params","sort","order","per_page","axios","get","result","data","fetchRepoDetails","url","includes","fetchContributors","CONTRIBUTORS_PER_PAGE","fetchLanguages","keys","warnedNoToken","fetchReadme","owner","repo","headers","Accept","interceptors","request","use","token","REACT_APP_GITHUB_OAUTH_TOKEN","__GITHUB_OAUTH_TOKEN__","Authorization","resources","en","translation","ru","languageDetector","initReactI18next","init","fallbackLng","BASE_LOCALE","keySeparator","interpolation","escapeValue","INPUT_DEBOUNCE_DELAY","FIRST_PAGE","DEFAULT_SEARCH_TERM","year","month","day","hour","minute","hour12","DEFAULT_PAGE_TITLE","i18nSlice","isSearching","searchTerm","searchSlice","setIsSearching","setSearchTerm","reposSlice","loadRepos","setRepos","isFetchingContributors","isFetchingLanguages","repoDetailSlice","getRepoDetails","stargazers_count","updated_at","description","owner_id","owner_html_url","html_url","login","avatar_url","getRepoContributors","contributors","contributions","getRepoLanguages","languages","resetRepoDetails","loadRepoDetails","contributors_url","languages_url","all","repoContributors","repoLanguages"],"mappings":"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","file":"static/js/main.b1bcf460.chunk.js","sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { LANGUAGES } from 'utils/consts';\nimport i18n from 'utils/i18n';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from 'app/rootReducer';\nimport { setCurrentLocale } from 'features/i18n/i18nSlice';\nimport { setHtmlTagLangAttribute } from 'utils/helpers';\nimport 'features/i18n/LanguageSelector.css';\n\nconst LanguageSelector = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const currentLanguage = useSelector((state: RootState) => state.i18n.currentLocale);\n\n  const changeLanguage = async (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = e.target;\n    await i18n.changeLanguage(value);\n    setHtmlTagLangAttribute(value);\n    dispatch(setCurrentLocale(value));\n  };\n\n  return (\n    <div className=\"language-selector__container\">\n      <label htmlFor=\"language-select\">{t('language')}</label>\n      <select\n        value={currentLanguage}\n        onChange={changeLanguage}\n        className=\"language-selector\"\n        id=\"language-select\"\n      >\n        {Object.entries(LANGUAGES)\n          .map(([languageCode, { name, emojiFlag }]) => (\n            <option key={name} value={languageCode}>\n              {emojiFlag}\n              &nbsp;\n              {name}\n            </option>\n          ))}\n      </select>\n    </div>\n  );\n};\n\nexport default LanguageSelector;\n","import React, { memo } from 'react';\nimport LanguageSelector from 'features/i18n/LanguageSelector';\nimport 'components/Footer/index.css';\nimport { PROJECT_REPO_LINK } from 'utils/consts';\n\nconst Footer = memo(() => (\n  <footer className=\"footer\">\n    <span className=\"footer__year\">\n      <a\n        className=\"icon--purple footer__link\"\n        href={PROJECT_REPO_LINK}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        &copy;\n      </a>\n      &nbsp;\n      <time>{new Date().getFullYear()}</time>\n    </span>\n    <LanguageSelector />\n  </footer>\n));\n\nexport default Footer;\n","import React, { forwardRef } from 'react';\nimport { ROUTES } from 'utils/consts';\nimport { Link } from 'react-router-dom';\nimport 'components/Header/index.css';\n\nconst Header = forwardRef<HTMLHeadElement>((props, ref) => (\n  <header className=\"header__container\" ref={ref}>\n    <Link to={ROUTES.MAIN} className=\"header__link\">\n      <svg width=\"50\" height=\"50\">\n        <image className=\"header__image\" href={`${process.env.PUBLIC_URL}/github-logo.svg`} />\n      </svg>\n      <h2 className=\"header__link--name header__title\">Reporigger</h2>\n    </Link>\n  </header>\n));\n\nexport default Header;\n","import React, { Suspense, lazy, useRef } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { ROUTES } from 'utils/consts';\nimport Footer from 'components/Footer';\nimport Loading from 'components/Loading';\nimport Header from 'components/Header';\nimport 'app/main.css';\nimport 'app/App.css';\n\nconst MainPage = lazy(() => import('components/MainPage'));\nconst NotFoundPage = lazy(() => import('components/NotFoundPage'));\nconst RepoDetails = lazy(() => import('features/repoDetails/RepoDetails'));\n\nconst App = () => {\n  const ref = useRef<HTMLHeadElement | null>(null);\n\n  return (\n    <article>\n      <main className=\"container\">\n        <Router>\n          <Header ref={ref} />\n          <Suspense fallback={<Loading />}>\n            <div className=\"main-content\">\n              <Switch>\n                <Route path={ROUTES.MAIN} exact>\n                  <MainPage ref={ref} />\n                </Route>\n                <Route path={ROUTES.REPO_CARD} exact>\n                  <RepoDetails ref={ref} />\n                </Route>\n                <Route path={ROUTES.NOT_FOUND} component={NotFoundPage} />\n              </Switch>\n            </div>\n          </Suspense>\n        </Router>\n      </main>\n      <Footer />\n    </article>\n  );\n};\n\nexport default App;\n","import { combineReducers } from '@reduxjs/toolkit';\n\nimport repos from 'features/reposList/reposSlice';\nimport pages from 'features/pagination/pageSlice';\nimport search from 'features/search/searchSlice';\nimport repoDetails from 'features/repoDetails/repoDetailsSlice';\nimport i18n from 'features/i18n/i18nSlice';\n\nconst rootReducer = combineReducers({\n  repos, pages, search, repoDetails, i18n,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport default rootReducer;\n","import { configureStore, Action } from '@reduxjs/toolkit';\nimport { ThunkAction } from 'redux-thunk';\n\nimport rootReducer, { RootState } from 'app/rootReducer';\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  module.hot.accept('./rootReducer', () => {\n    // eslint-disable-next-line global-require\n    const newRootReducer = require('./rootReducer').default;\n    store.replaceReducer(newRootReducer);\n  });\n}\n\nexport type AppDispatch = typeof store.dispatch\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from 'app/store';\nimport 'index.css';\nimport 'utils/i18n';\n\ndocument.body.classList.add('theme-dark');\n\nfunction render() {\n  // eslint-disable-next-line global-require\n  const App = require('app/App').default;\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root'),\n  );\n}\n\nrender();\n\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  module.hot.accept('app/App', render);\n}\n","const CURRENT_LEVEL = 'DEBUG';\n\nenum LEVELS {\n    ERROR,\n    WARN,\n    DEBUG,\n}\n\nenum METHODS {\n    ERROR = 'error',\n    WARN = 'warn',\n    DEBUG = 'debug',\n}\n\nconst print = (level: keyof typeof LEVELS, method: METHODS, args: any) => {\n  if (LEVELS[CURRENT_LEVEL] < LEVELS[level]) {\n    return;\n  }\n\n  if (!args || args.length === 0 || !args[0]) {\n    return;\n  }\n\n  const now = new Date();\n  const formatted = `${now.toISOString()}:`;\n  // eslint-disable-next-line no-console\n  console[method](formatted, ...args);\n};\n\nconst log = {\n  debug(...args: any) {\n    print('DEBUG', METHODS.DEBUG, args);\n  },\n\n  warn(...args: any) {\n    print('WARN', METHODS.WARN, args);\n  },\n\n  error(...args: any) {\n    print('ERROR', METHODS.ERROR, args);\n  },\n};\n\nexport default log;\n","import { PAGINATION_BUTTONS_COUNT, MAX_SEARCH_PAGE, DEFAULT_DATE_FORMAT_OPTIONS } from 'utils/consts';\nimport log from 'utils/log';\n\nexport const generatePagesNumeration = (\n  current: number, total: number, width: number = PAGINATION_BUTTONS_COUNT,\n) => {\n  // eslint-disable-next-line no-param-reassign\n  total = total > MAX_SEARCH_PAGE ? MAX_SEARCH_PAGE : total;\n  const length = total < width ? total : width;\n  const left = Math.max(0, Math.min(total - width, current - Math.floor(width / 2)));\n\n  const items: (number | string)[] = Array.from({ length }, (item, idx) => idx + left);\n\n  if (items[0] > 0) {\n    items.splice(0, 2, 0, 'prev-more');\n  }\n\n  if (items[items.length - 1] < total - 1) {\n    items.splice(items.length - 1, 2, 'next-more', total - 1);\n  }\n  return items;\n};\n\nexport const formatDate = (\n  dateTime: string, language: string = navigator.language, options = DEFAULT_DATE_FORMAT_OPTIONS,\n) => new Date(dateTime).toLocaleString(language, options);\n\nexport const saveInSessionStorage = (key: string, value: string): string => {\n  try {\n    sessionStorage[key] = value;\n    return value;\n  } catch (e) {\n    log.error(e);\n    log.error('The limit of sessionStorage is exceeded and it will be cleared.');\n    localStorage.clear();\n    sessionStorage[key] = value;\n    return value;\n  }\n};\n\nexport const setHtmlTagLangAttribute = (language: string) => {\n  window.document.documentElement.lang = language;\n};\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { REPOS_PER_PAGE } from 'utils/consts';\nimport { saveInSessionStorage } from 'utils/helpers';\n\ntype IRepos = { totalPages: number, currentPage: number };\n\nconst initialState: IRepos = {\n  totalPages: 1,\n  currentPage: parseInt(sessionStorage.currentPage, 10) || 1,\n};\n\nconst pageSlice = createSlice({\n  name: 'pages',\n  initialState,\n  reducers: {\n    setCurrentPage: (state, action: PayloadAction<number>) => {\n      state.currentPage = action.payload;\n\n      saveInSessionStorage('currentPage', state.currentPage.toString());\n\n      return state;\n    },\n    setTotalPages: (state, action: PayloadAction<number>) => {\n      const total_count = action.payload;\n      state.totalPages = Math.ceil(total_count / REPOS_PER_PAGE);\n\n      return state;\n    },\n  },\n});\n\nexport const {\n  setCurrentPage,\n  setTotalPages,\n} = pageSlice.actions;\n\nexport default pageSlice.reducer;\n","import axios from 'axios';\nimport { Repo, Contributor } from 'features/reposList/types';\nimport { REPOS_PER_PAGE, PROJECT_REPO_LINK, CONTRIBUTORS_PER_PAGE } from 'utils/consts';\nimport log from 'utils/log';\n\nconst SEARCH_URL_BASE = 'https://api.github.com/search/repositories';\nconst REPO_URL_BASE = 'https://api.github.com/repositories';\n\nexport interface GetReposResponse {\n    incomplete_results: boolean,\n    items: Repo[],\n    total_count: number,\n}\n\ninterface IConfig {\n    params: {\n        q: string,\n        page?: number,\n        sort?: 'stars' | 'forks' | 'help-wanted-issues' | 'updated',\n        order?: 'desc' | 'asc',\n        per_page?: number,\n    },\n    headers?: {\n        [key: string]: string,\n    },\n}\n\nconst sleep = (ms: number) => new Promise((res) => setTimeout(res, ms));\n\nasync function requestWithRetry<T>(fn: () => Promise<T>, retries = 3, backoff = 500): Promise<T | string> {\n  return fn().catch(async (err) => {\n    const status = err && err.response && err.response.status;\n    if (status === 403) {\n      // GitHub rate-limited or forbids access — set global flag and return sentinel\n      try {\n        // eslint-disable-next-line no-undef\n        if (typeof window !== 'undefined') window.__GITHUB_RATE_LIMITED__ = true;\n      } catch (e) {\n        // ignore\n      }\n      return 'RATE_LIMITED';\n    }\n\n    if ((status === 429 || status === 502 || status === 503 || status === 504) && retries > 0) {\n      // transient error, retry with exponential backoff\n      await sleep(backoff);\n      return requestWithRetry(fn, retries - 1, backoff * 2);\n    }\n\n    // for other errors return the message to preserve existing API\n    return (err && err.message) || 'Request failed';\n  });\n}\n\nexport const fetchRepos = async (q: string, page: number): Promise<GetReposResponse | string> => {\n  const config: IConfig = {\n    params: {\n      q,\n      page,\n      sort: 'stars',\n      order: 'desc',\n      per_page: REPOS_PER_PAGE,\n    },\n  };\n\n  const result = await requestWithRetry(() => axios.get<GetReposResponse>(SEARCH_URL_BASE, config));\n  if (typeof result === 'string') return result;\n  return (result as any).data as GetReposResponse;\n};\n\nexport const fetchRepoDetails = async (id: string): Promise<Repo | string> => {\n  // id can be numeric repo id or owner/name\n  const url = id && id.includes('/') ? `https://api.github.com/repos/${id}` : `${REPO_URL_BASE}/${id}`;\n  const result = await requestWithRetry(() => axios.get<Repo>(url));\n  if (typeof result === 'string') return result;\n  return (result as any).data as Repo;\n};\n\n/**\n * https://developer.github.com/v3/repos/#list-repository-contributors\n *\n * Lists contributors to the specified repository and\n * sorts them by the number of commits per contributor in descending order.\n */\nexport const fetchContributors = async (url: string): Promise<Contributor[] | string> => {\n  const config = {\n    params: {\n      per_page: CONTRIBUTORS_PER_PAGE,\n    },\n  };\n\n  const result = await requestWithRetry(() => axios.get<Contributor[]>(url, config));\n  if (typeof result === 'string') return result;\n  return (result as any).data as Contributor[];\n};\n\n/**\n *  https://developer.github.com/v3/repos/#list-repository-languages\n */\nexport const fetchLanguages = async (url: string): Promise<string[] | [] | string> => {\n  const result = await requestWithRetry(() => axios.get<{[key:string]: number}>(url));\n  if (typeof result === 'string') return result;\n  return Object.keys((result as any).data);\n};\n\nlet warnedNoToken = false;\n\nexport const fetchReadme = async (owner: string, repo: string): Promise<string | string> => {\n  const url = `https://api.github.com/repos/${owner}/${repo}/readme`;\n  // Request raw content\n  const result = await requestWithRetry(() => axios.get<string>(url, { headers: { Accept: 'application/vnd.github.v3.raw' } }));\n  // On error requestWithRetry returns a string sentinel; return empty string to signal fallback\n  if (typeof result === 'string') return '';\n  return (result as any).data as string;\n};\n\naxios.interceptors.request.use((config: Partial<IConfig> = {}) => {\n  try {\n    // Prefer token provided via environment variable REACT_APP_GITHUB_OAUTH_TOKEN\n    // (create-react-app exposes REACT_APP_* vars to the browser at build time)\n    const token = process?.env?.REACT_APP_GITHUB_OAUTH_TOKEN || (typeof window !== 'undefined' && (window as any).__GITHUB_OAUTH_TOKEN__);\n\n    if (token) {\n      // eslint-disable-next-line no-param-reassign\n      config.headers = { ...config.headers, Authorization: `token ${token}` };\n    } else if (!warnedNoToken) {\n      // Log only once: missing token will cause unauthenticated requests with low rate limits\n      warnedNoToken = true;\n      log.error('No GitHub OAuth token provided (set REACT_APP_GITHUB_OAUTH_TOKEN). Requests will be unauthenticated and rate-limited.');\n      log.error(`Read the README Access token section for more details: ${PROJECT_REPO_LINK}#access-token`);\n    }\n  } catch (e) {\n    log.error(e);\n  }\n\n  return config;\n});\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport languageDetector from 'i18next-browser-languagedetector';\nimport { BASE_LOCALE } from 'utils/consts';\nimport ru from '__locales/ru.json';\nimport en from '__locales/en.json';\n\nconst resources = {\n  en: {\n    translation: en,\n  },\n  ru: {\n    translation: ru,\n  },\n};\n\ni18n\n  .use(languageDetector)\n  .use(initReactI18next)\n  .init({\n    resources,\n    fallbackLng: BASE_LOCALE,\n\n    keySeparator: false,\n\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n","export const INPUT_DEBOUNCE_DELAY = 500;\n\n// https://developer.github.com/v3/search/\nexport const GITHUB_SEARCH_LIMIT = 1000;\n\nexport const REPOS_PER_PAGE = 10;\n\nexport const CONTRIBUTORS_PER_PAGE = 10;\n\nexport const MAX_SEARCH_PAGE = Math.ceil(GITHUB_SEARCH_LIMIT / REPOS_PER_PAGE);\n\nexport const PAGINATION_BUTTONS_COUNT = 8;\n\nexport const FIRST_PAGE = 1;\n\nexport const DEFAULT_SEARCH_TERM = 'stars:>0';\n\nexport const DEFAULT_DATE_FORMAT_OPTIONS = {\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n  hour: 'numeric',\n  minute: 'numeric',\n  hour12: false,\n};\n\nexport const ROUTES = {\n  MAIN: '/',\n  REPO_CARD: '/:id',\n  NOT_FOUND: '*',\n};\n\nexport const BASE_LOCALE = 'ru';\n\nexport const LANGUAGES = {\n  en: { name: 'English', emojiFlag: '🇬🇧' },\n  ru: { name: 'Русский', emojiFlag: '🇷🇺' },\n};\n\nexport const PROJECT_REPO_LINK = 'https://github.com/ArtemBaskal/github-dashboard';\n\nexport const DEFAULT_PAGE_TITLE = 'Github Dashboard';\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport i18n from 'utils/i18n';\n\nconst initialState = { currentLocale: i18n.language };\n\nconst i18nSlice = createSlice({\n  name: 'i18n',\n  initialState,\n  reducers: {\n    setCurrentLocale: (state, action: PayloadAction<string>) => {\n      state.currentLocale = action.payload;\n\n      return state;\n    },\n  },\n});\n\nexport const {\n  setCurrentLocale,\n} = i18nSlice.actions;\n\nexport default i18nSlice.reducer;\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { saveInSessionStorage } from 'utils/helpers';\n\ntype IRepos = { isSearching: boolean, searchTerm: string };\n\nconst initialState: IRepos = { isSearching: true, searchTerm: sessionStorage.searchTerm || '' };\n\nconst searchSlice = createSlice({\n  name: 'search',\n  initialState,\n  reducers: {\n    setIsSearching: (state, action: PayloadAction<boolean>) => {\n      state.isSearching = action.payload;\n\n      return state;\n    },\n    setSearchTerm: (state, action: PayloadAction<string>) => {\n      state.searchTerm = action.payload;\n\n      saveInSessionStorage('searchTerm', state.searchTerm);\n\n      return state;\n    },\n  },\n});\n\nexport const {\n  setIsSearching,\n  setSearchTerm,\n} = searchSlice.actions;\n\nexport default searchSlice.reducer;\n","import React from 'react';\nimport 'components/Loading/index.css';\n\nconst Loading = () => (\n  <div className=\"loader__overlay\">\n    <div className=\"loader__spinner\" />\n  </div>\n);\n\nexport default Loading;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppThunk, AppDispatch } from 'app/store';\nimport { fetchRepos } from 'api/githubAPI';\nimport { Repo } from 'features/reposList/types';\nimport { setTotalPages } from 'features/pagination/pageSlice';\nimport log from 'utils/log';\n\ntype IRepos = Repo[];\n\nconst initialState: IRepos = [];\n\nconst reposSlice = createSlice({\n  name: 'repos',\n  initialState,\n  reducers: {\n    fetchRepos: (state, action: PayloadAction<Repo[]>): IRepos => action.payload,\n  },\n});\n\nexport const loadRepos = (q: string, page: number): AppThunk => async (dispatch: AppDispatch) => {\n  const repos = await fetchRepos(q, page);\n\n  if (typeof repos === 'string') {\n    if (repos === 'RATE_LIMITED') {\n      // set empty and bail silently — UI can read window.__GITHUB_RATE_LIMITED__ to show banner\n      dispatch(reposSlice.actions.fetchRepos([]));\n      dispatch(setTotalPages(0));\n      return;\n    }\n    // Instead of throwing (which bubbles to the ErrorBoundary), handle gracefully:\n    log.error('Failed to load repositories:', repos);\n    dispatch(reposSlice.actions.fetchRepos([]));\n    dispatch(setTotalPages(0));\n    return;\n  }\n\n  dispatch(reposSlice.actions.fetchRepos(repos.items));\n  dispatch(setTotalPages(repos.total_count));\n};\n\nexport const { fetchRepos: setRepos } = reposSlice.actions;\n\nexport default reposSlice.reducer;\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppThunk, AppDispatch } from 'app/store';\nimport { fetchRepoDetails, fetchContributors, fetchLanguages } from 'api/githubAPI';\nimport { Repo, Contributor } from 'features/reposList/types';\n\ntype Fetching = {\n    isFetchingContributors?: boolean,\n    isFetchingLanguages?: boolean\n};\n\nconst initialState: Partial<Repo> & Fetching = {\n  isFetchingContributors: true,\n  isFetchingLanguages: true,\n};\n\nconst repoDetailSlice = createSlice({\n  name: 'repoDetails',\n  initialState,\n  reducers: {\n    getRepoDetails(state, action: PayloadAction<Repo>): Repo {\n      const {\n        id,\n        name,\n        stargazers_count,\n        updated_at,\n        description,\n        owner: {\n          id: owner_id, html_url: owner_html_url, login, avatar_url,\n        },\n        html_url,\n      } = action.payload;\n\n      state = {\n        id,\n        name,\n        stargazers_count,\n        updated_at,\n        description,\n        html_url,\n        owner: {\n          id: owner_id, html_url: owner_html_url, login, avatar_url,\n        },\n      };\n\n      state.isFetchingContributors = true;\n      state.isFetchingLanguages = true;\n\n      return state as Repo;\n    },\n    getRepoContributors: (state, action: PayloadAction<Contributor[]>): Repo => {\n      state.contributors = action.payload.map(({\n        id, html_url, login, avatar_url, contributions,\n      }) => ({\n        id, html_url, login, avatar_url, contributions,\n      }));\n\n      state.isFetchingContributors = false;\n\n      return state as Repo;\n    },\n    getRepoLanguages: (state, action: PayloadAction<string[]>): Repo => {\n      state.languages = action.payload;\n      state.isFetchingLanguages = false;\n\n      return state as Repo;\n    },\n    resetRepoDetails: (state) => {\n      state = initialState;\n      return state;\n    },\n  },\n});\n\nexport const { resetRepoDetails } = repoDetailSlice.actions;\n\nexport const loadRepoDetails = (id: string): AppThunk => async (dispatch: AppDispatch) => {\n  const repoDetails = await fetchRepoDetails(id);\n  if (typeof repoDetails === 'string') {\n    throw repoDetails;\n  } else {\n    dispatch(repoDetailSlice.actions.getRepoDetails(repoDetails));\n  }\n\n  const { contributors_url, languages_url } = repoDetails;\n  const [repoContributors, repoLanguages] = await Promise\n    .all([fetchContributors(contributors_url), fetchLanguages(languages_url)]);\n\n  if (typeof repoContributors === 'string') {\n    throw repoContributors;\n  } else {\n    dispatch(repoDetailSlice.actions.getRepoContributors(repoContributors));\n  }\n\n  if (typeof repoLanguages === 'string') {\n    throw repoContributors;\n  } else {\n    dispatch(repoDetailSlice.actions.getRepoLanguages(repoLanguages));\n  }\n};\n\nexport default repoDetailSlice.reducer;\n"],"sourceRoot":""}